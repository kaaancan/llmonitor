name: Build Docker Images

on:
  push:
    branches:
      - main

jobs:
  run-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: npm ci && npx playwright install --with-deps
      - name: Start the development server
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          NEXT_PUBLIC_APP_URL: http://localhost:8080
          NEXT_PUBLIC_API_URL: http://localhost:3333
          LUNARY_PUBLIC_KEY: 259d2d94-9446-478a-ae04-484de705b522
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}

        run: npm run dev:test & npx wait-on http://localhost:3333/v1/health

      - name: Run tests
        run: npx playwright test
        env:
          BASE_URL: http://localhost:8080
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

  build-and-push:
    needs: run-tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out the private Ops repo
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.ACCESS_TOKEN }}
          submodules: "recursive"

      - name: Generate timestamp
        id: timestamp
        run: echo "::set-output name=timestamp::$(date +%Y%m%d%H%M%S)"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to private Docker Registry
        uses: docker/login-action@v3
        with:
          registry: registry.lunary.ai
          username: ${{ secrets.DOCKER_REGISTRY_USERNAME }}
          password: ${{ secrets.DOCKER_REGISTRY_PASSWORD }}

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/backend/Dockerfile
          push: true
          tags: registry.lunary.ai/backend:latest
          platforms: linux/amd64

      - name: Build and push radar
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/radar/Dockerfile
          push: true
          tags: registry.lunary.ai/radar:latest
          platforms: linux/amd64

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/frontend/Dockerfile
          push: true
          tags: registry.lunary.ai/frontend:latest
          platforms: linux/amd64

      - name: Build and push db
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./ops/db/Dockerfile
          push: true
          tags: registry.lunary.ai/db:latest
          platforms: linux/amd64

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to Production
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_IP_ADDRESS }}
          username: root
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 3855
          script: |
            cd /opt/lunary
            docker compose pull
            docker compose down
            docker compose up -d
